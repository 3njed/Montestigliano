	include "../Common/intro.edp";
	real nu=1./Re;

	Uvvp [ub1,ub2,pb];	// Read base-flow
	{
		ifstream file("../BF/cbf.txt");
		file >> ub1[];
	};
	
	matrix NSMAT;		// Generate linearized Navier-Stokes matrix
	{
		varf NS([du1,du2,dp],[v1,v2,q]) =
     		int2d(th)(
            	((ub1*dx(du1)+du1*dx(ub1)+ub2*dy(du1)+du2*dy(ub1))*v1)
            	+((ub1*dx(du2)+du1*dx(ub2)+ub2*dy(du2)+du2*dy(ub2))*v2)
            	+ nu*(dx(du1)*dx(v1)+dy(du1)*dy(v1))
            	+ nu*(dx(du2)*dx(v2)+dy(du2)*dy(v2))
            	- dp*(dx(v1)+dy(v2))
            	+ (dx(du1)+dy(du2))*q
           	)
			+on(1,2,du1=0.,du2=0.)
			+on(4,du2=0.);
		NSMAT=NS(Uvvp,Uvvp,solver=sparsesolver);
	};

	Uvvp [r1,r2,r3];	// Generate right-hand-side, i.e. diffusion of base-flow
	{	
		varf SMNS([du1,du2,dp],[v1,v2,q])=
		    -int2d(th)(
				v1*(dxx(ub1)+dyy(ub1))
				+v2*(dxx(ub2)+dyy(ub2))
			)
			+on(1,2,du1=0,du2=0)
			+on(4,du2=0);

		r1[]=SMNS(0,Uvvp);
	};

	Uvvp [udelta,vdelta,pdelta];	// Compute base-flow modification due to increase of Reynolds number
	udelta[]=NSMAT^-1*r1[];

	{
		 ofstream file("cbdelta.txt");
		 file.precision(16);
		 file << udelta[];
    };
	
	plot(udelta,wait=1,value=1);
	plot(vdelta,wait=1,value=1);
	plot(pdelta,wait=1,value=1);
