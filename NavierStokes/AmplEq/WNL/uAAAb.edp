	include "../Common/intro.edp";
	real nu=1./Re;

	complex s;	// Read frequency of global mode
	{
		real sr,si;
		{
			ifstream file("../eigs/vp.txt");
			file >> sr >> si;
		}
		s=sr+1i*si;
		cout << s << endl;
	}

	Uvvp<complex> [ud,vd,pd];
	{
		ifstream file("../Eigs/ev0.txt");
		file >> ud[];
	}
	
	varf Mass([du1,du2,dp],[v1,v2,q]) = int2d(th)(du1*v1+du2*v2);
	matrix<complex> MatMass=Mass(Uvvp,Uvvp,solver=CG);
	Uvvp<complex> [udMass,vdMass,pdMass]; udMass[]=MatMass*ud[];
	
	matrix<complex> NSMAT;	// Build linearized Navier-Stokes matrix
	{
		Uvvp [ub1,ub2,pb];	// Read base-flow
		{
		 ifstream file("../BF/cbf.txt");
		 file >> ub1[];
		};

		varf NS([du1,du2,dp],[v1,v2,q]) =	// Weak form of linearized Navier-Stokes operator
     		int2d(th)(
				s*(du1*v1+du2*v2)
            	+((ub1*dx(du1)+du1*dx(ub1)+ub2*dy(du1)+du2*dy(ub1))*v1)
            	+((ub1*dx(du2)+du1*dx(ub2)+ub2*dy(du2)+du2*dy(ub2))*v2)
            	+ nu*(dx(du1)*dx(v1)+dy(du1)*dy(v1))
            	+ nu*(dx(du2)*dx(v2)+dy(du2)*dy(v2))
            	- dp*(dx(v1)+dy(v2))
            	+ (dx(du1)+dy(du2))*q
           	)
  		+on(1,2,du1=0.,du2=0.)
		+on(4,du2=0.);
		matrix<complex> A=NS(Uvvp,Uvvp,solver=GMRES);
		NSMAT=[[A,udMass[]],[udMass[]',0.0+0.0*1i]];
		set(NSMAT,solver=sparsesolver);
	};

	complex[int] rhsc(Uvvp.ndof+1); // Build right hand-side
	{

		Uvvp [uAAb,vAAb,pAAb];		// Read zero-harmonic generated by global mode
		{
		 ifstream file("cbAAb.txt");
		 file >> uAAb[];
		};
		Uvvp<complex> [uAA,vAA,pAA];	// Read second harmonic generated by global mode
		{
		 ifstream file("cbAA.txt");
		 file >> uAA[];
		};
		
		varf SMNS([du1,du2,dp],[v1,v2,q])=	// Weak form of forcing term involving interaction of global mode with himself 
		int2d(th)(
						v1*(uAAb*dx(ud)+vAAb*dy(ud)+ud*dx(uAAb)+vd*dy(uAAb))
					   +v2*(uAAb*dx(vd)+vAAb*dy(vd)+ud*dx(vAAb)+vd*dy(vAAb))
					   )
		+int2d(th)(
						v1*(uAA*conj(dx(ud))+vAA*conj(dy(ud))+conj(ud)*dx(uAA)+conj(vd)*dy(uAA))
					   +v2*(uAA*conj(dx(vd))+vAA*conj(dy(vd))+conj(ud)*dx(vAA)+conj(vd)*dy(vAA))
					   )
  		
  		+on(1,2,du1=0,du2=0)
		+on(4,du2=0);
		Uvvp<complex> [uu,vv,pp]; uu[]=SMNS(0,Uvvp);
		rhsc=[uu[],0.0+0.0*1i];
	};

	complex[int] solc(Uvvp.ndof+1); // solution
	solc=NSMAT^-1*rhsc;
	
	Uvvp<complex> [uAAAb,vAAAb,pAAAb];	// Compute second harmonic due to global mode
	complex mu;
	[uAAAb[],mu]=solc;

	{
		 ofstream file("cbAAAb.txt");
		 file.precision(16);
		 file << uAAAb[];
    };

	cout << "mu=" << mu << endl;

	{
		ofstream file("mu2.txt");
		file.precision(16);
		file << mu << endl;
	};	
	Uv uu;
	uu=real(uAAAb); plot(uu,wait=1,value=1,fill=1);
	uu=real(vAAAb); plot(uu,wait=1,value=1,fill=1);
	uu=imag(uAAAb); plot(uu,wait=1,value=1,fill=1);
	uu=imag(vAAAb); plot(uu,wait=1,value=1,fill=1);

	Up pp;
	pp=real(pAAAb); plot(pp,wait=1,value=1,fill=1);
	pp=imag(pAAAb); plot(pp,wait=1,value=1,fill=1);
