		include "../Common/intro.edp";

		Uvvp<complex> [ua,va,pa];	// Read adjoint global mode
		{
			ifstream file("../Eigs/ea_scaled0.txt");
			file >> ua[];
		}
		Uvvp<complex> [ud,vd,pd];	// Read direct global mode
		{
			ifstream file("../Eigs/ev0.txt");
			file >> ud[];
		}
		Uvvp [uAAb,vAAb,pAAb];		// Read zero-harmonic generated by global mode
		{
		 ifstream file("cbAAb.txt");
		 file >> uAAb[];
		};
		Uvvp<complex> [uAA,vAA,pAA];	// Read second harmonic generated by global mode
		{
		 ifstream file("cbAA.txt");
		 file >> uAA[];
		};

		complex mu=		// Compute coefficient
		int2d(th)(		// term involving zero-harmonic 
			conj(ua)*(uAAb*dx(ud)+vAAb*dy(ud)+ud*dx(uAAb)+vd*dy(uAAb))
			+conj(va)*(uAAb*dx(vd)+vAAb*dy(vd)+ud*dx(vAAb)+vd*dy(vAAb))
		);
		+int2d(th)(		// term involving seconf harmonic
			conj(ua)*(uAA*conj(dx(ud))+vAA*conj(dy(ud))+conj(ud)*dx(uAA)+conj(vd)*dy(uAA))
			+conj(va)*(uAA*conj(dx(vd))+vAA*conj(dy(vd))+conj(ud)*dx(vAA)+conj(vd)*dy(vAA))
		);

		cout << "mu=" << mu << endl;

		{
		 ofstream file("mu.txt");
		 file.precision(16);
		 file << mu << endl;
		};
